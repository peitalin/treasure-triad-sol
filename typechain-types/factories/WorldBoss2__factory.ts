/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WorldBoss2, WorldBoss2Interface } from "../WorldBoss2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum Skill",
        name: "_skill",
        type: "uint8",
      },
    ],
    name: "attackArms",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Skill",
        name: "_skill",
        type: "uint8",
      },
    ],
    name: "attackBody",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Skill",
        name: "_skill",
        type: "uint8",
      },
    ],
    name: "attackHead",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Skill",
        name: "_skill",
        type: "uint8",
      },
    ],
    name: "attackLeg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewardsOnDeath",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isBossStillAlive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "magic",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260405180602001604052806000815250600690805190602001906200002b92919062000149565b5060405180602001604052806000815250600790805190602001906200005392919062000149565b503480156200006157600080fd5b506032600281905550603260038190555060646004819055506064600581905550604051806060016040528060248152602001620011126024913960069080519060200190620000b392919062000149565b506040518060400160405280602081526020017f697066733a2f2f736f6d655f677265656b5f6d7974685f626f73732e6e706e67815250600790805190602001906200010192919062000149565b5033600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200025e565b8280546200015790620001f9565b90600052602060002090601f0160209004810192826200017b5760008555620001c7565b82601f106200019657805160ff1916838001178555620001c7565b82800160010185558215620001c7579182015b82811115620001c6578251825591602001919060010190620001a9565b5b509050620001d69190620001da565b5090565b5b80821115620001f5576000816000905550600101620001db565b5090565b600060028204905060018216806200021257607f821691505b602082108114156200022957620002286200022f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b610ea4806200026e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a43e7ff51161005b578063a43e7ff5146100d8578063cbd388a7146100f4578063d78029f214610110578063db19e3db1461011a5761007d565b80630d8546461461008257806316df14a4146100a0578063731e1da5146100bc575b600080fd5b61008a610138565b6040516100979190610b55565b60405180910390f35b6100ba60048036038101906100b59190610991565b61015e565b005b6100d660048036038101906100d19190610991565b61024d565b005b6100f260048036038101906100ed9190610991565b6102d2565b005b61010e60048036038101906101099190610991565b610357565b005b6101186103dc565b005b6101226105df565b60405161012f9190610b3a565b60405180910390f35b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156101e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d790610bb2565b60405180910390fd5b6000600254111561024a576001600260008282546101fe9190610c44565b9250508190555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156102cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c690610bb2565b60405180910390fd5b50565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034b90610bb2565b60405180910390fd5b50565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156103d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d090610bb2565b60405180910390fd5b50565b6103e46105df565b6105dd57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104b6576104b130600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612710600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610638909392919063ffffffff16565b6105dc565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156105db576000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156105da5761059530336028600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610638909392919063ffffffff16565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b5b5b565b60008060025411156105f45760019050610635565b600060035411156106085760019050610635565b6000600454111561061c5760019050610635565b600060055411156106305760019050610635565b600090505b90565b6106bb846323b872dd60e01b85858560405160240161065993929190610b03565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106c1565b50505050565b6000610723826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166107889092919063ffffffff16565b905060008151111561078357808060200190518101906107439190610968565b610782576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077990610bf2565b60405180910390fd5b5b505050565b606061079784846000856107a0565b90509392505050565b6060824710156107e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dc90610b92565b60405180910390fd5b6107ee856108b4565b61082d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082490610bd2565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516108569190610aec565b60006040518083038185875af1925050503d8060008114610893576040519150601f19603f3d011682016040523d82523d6000602084013e610898565b606091505b50915091506108a88282866108d7565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156108e757829050610937565b6000835111156108fa5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092e9190610b70565b60405180910390fd5b9392505050565b60008151905061094d81610e47565b92915050565b60008135905061096281610e5e565b92915050565b60006020828403121561097a57600080fd5b60006109888482850161093e565b91505092915050565b6000602082840312156109a357600080fd5b60006109b184828501610953565b91505092915050565b6109c381610c78565b82525050565b6109d281610c8a565b82525050565b60006109e382610c12565b6109ed8185610c28565b93506109fd818560208601610ce4565b80840191505092915050565b610a1281610cc0565b82525050565b6000610a2382610c1d565b610a2d8185610c33565b9350610a3d818560208601610ce4565b610a4681610d46565b840191505092915050565b6000610a5e602683610c33565b9150610a6982610d57565b604082019050919050565b6000610a81601483610c33565b9150610a8c82610da6565b602082019050919050565b6000610aa4601d83610c33565b9150610aaf82610dcf565b602082019050919050565b6000610ac7602a83610c33565b9150610ad282610df8565b604082019050919050565b610ae681610cb6565b82525050565b6000610af882846109d8565b915081905092915050565b6000606082019050610b1860008301866109ba565b610b2560208301856109ba565b610b326040830184610add565b949350505050565b6000602082019050610b4f60008301846109c9565b92915050565b6000602082019050610b6a6000830184610a09565b92915050565b60006020820190508181036000830152610b8a8184610a18565b905092915050565b60006020820190508181036000830152610bab81610a51565b9050919050565b60006020820190508181036000830152610bcb81610a74565b9050919050565b60006020820190508181036000830152610beb81610a97565b9050919050565b60006020820190508181036000830152610c0b81610aba565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610c4f82610cb6565b9150610c5a83610cb6565b925082821015610c6d57610c6c610d17565b5b828203905092915050565b6000610c8382610c96565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ccb82610cd2565b9050919050565b6000610cdd82610c96565b9050919050565b60005b83811015610d02578082015181840152602081019050610ce7565b83811115610d11576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f616c726561647920706172746963697061746564000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b610e5081610c8a565b8114610e5b57600080fd5b50565b60038110610e6b57600080fd5b5056fea26469706673582212209bff91728e82a0a5533a30aa9af1c8e5a0d935ac5a5c66afc3bf7f71534b90de64736f6c63430008040033697066733a2f2f736f6d655f677265655f6d7974685f6261636b67726f756e642e706e67";

type WorldBoss2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorldBoss2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorldBoss2__factory extends ContractFactory {
  constructor(...args: WorldBoss2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WorldBoss2";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WorldBoss2> {
    return super.deploy(overrides || {}) as Promise<WorldBoss2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WorldBoss2 {
    return super.attach(address) as WorldBoss2;
  }
  connect(signer: Signer): WorldBoss2__factory {
    return super.connect(signer) as WorldBoss2__factory;
  }
  static readonly contractName: "WorldBoss2";
  public readonly contractName: "WorldBoss2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorldBoss2Interface {
    return new utils.Interface(_abi) as WorldBoss2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WorldBoss2 {
    return new Contract(address, _abi, signerOrProvider) as WorldBoss2;
  }
}
