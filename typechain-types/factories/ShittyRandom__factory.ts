/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ShittyRandom, ShittyRandomInterface } from "../ShittyRandom";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    name: "ArrayOfIndices",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8[2][]",
        name: "",
        type: "uint8[2][]",
      },
    ],
    name: "ArrayOfSampledCellCoords",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_row",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_col",
        type: "uint256",
      },
    ],
    name: "getLegionWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "requestRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number_of_cells",
        type: "uint256",
      },
    ],
    name: "sampleRandomGridCellCoords",
    outputs: [
      {
        internalType: "uint8[2][]",
        name: "",
        type: "uint8[2][]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_row",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_col",
        type: "uint256",
      },
    ],
    name: "stakeLegion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userLegionWeights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260405180606001604052806040518060c0016040528068068155a43676e00000815260200168022b1c8c1227a00000815260200167d02ab486cedc000081526020016801158e460913d000008152602001678ac7230489e800008152602001600081525081526020016040518060c0016040528060008152602001674c53ecdc18a60000815260200160008152602001673782dace9d90000081526020016722b1c8c1227a00008152602001600081525081526020016040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525081525060019060036200010292919062000124565b50680ad78ebc5ac62000006002553480156200011d57600080fd5b5062000242565b82805482825590600052602060002090810192821562000173579160200282015b8281111562000172578251829060066200016192919062000186565b509160200191906001019062000145565b5b509050620001829190620001d8565b5090565b828054828255906000526020600020908101928215620001c5579160200282015b82811115620001c4578251825591602001919060010190620001a7565b5b509050620001d4919062000200565b5090565b5b80821115620001fc5760008181620001f291906200021f565b50600101620001d9565b5090565b5b808211156200021b57600081600090555060010162000201565b5090565b50805460008255906000526020600020908101906200023f919062000200565b50565b61144d80620002526000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063199895ba1461005c57806363e264b31461008c578063af473f60146100bc578063b1eb96c9146100ec578063daf002cd1461011c575b600080fd5b61007660048036038101906100719190610c69565b610138565b6040516100839190610f74565b60405180910390f35b6100a660048036038101906100a19190610c92565b61043d565b6040516100b39190611048565b60405180910390f35b6100d660048036038101906100d19190610c40565b6104d3565b6040516100e39190611048565b60405180910390f35b61010660048036038101906101019190610c69565b6104eb565b6040516101139190611048565b60405180910390f35b61013660048036038101906101319190610c92565b61052f565b005b6060600060099050600061014c8483610762565b905060006040518061012001604052806040518060400160405280600060ff168152602001600060ff1681525081526020016040518060400160405280600060ff168152602001600160ff1681525081526020016040518060400160405280600060ff168152602001600260ff1681525081526020016040518060400160405280600160ff168152602001600060ff1681525081526020016040518060400160405280600160ff168152602001600160ff1681525081526020016040518060400160405280600160ff168152602001600260ff1681525081526020016040518060400160405280600260ff168152602001600060ff1681525081526020016040518060400160405280600260ff168152602001600160ff1681525081526020016040518060400160405280600260ff168152602001600260ff16815250815250905060008567ffffffffffffffff8111156102d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561030957816020015b6102f6610bb6565b8152602001906001900390816102ee5790505b50905060005b83518110156103f9576000848281518110610353577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000848260098110610398577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201519050808484815181106103d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250505080806103f190611224565b91505061030f565b507fd2cdd152f44d7865cf638b593dda807a30fe13c5514661a9250b9afe961d4732816040516104299190610f74565b60405180910390a180945050505050919050565b6000806001848154811061047a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200183815481106104bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490508091505092915050565b60036020528060005260406000206000915090505481565b600080424433856040516020016105059493929190610f26565b60405160208183030381529060405290506000818051906020012060001c90508092505050919050565b6105ad6040518060400160405280601081526020017f0a70726576696f75732077656967687400000000000000000000000000000000815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610991565b60006105b9838361043d565b90506105fa6040518060400160405280600e81526020017f7374616b696e672077656967687400000000000000000000000000000000000081525082610991565b60025481600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610648919061111e565b1115610689576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068090611028565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106d8919061111e565b9250508190555061075d6040518060400160405280600c81526020017f6166746572207765696768740000000000000000000000000000000000000000815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610991565b505050565b6060818311156107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079e90610fe8565b60405180910390fd5b60008367ffffffffffffffff8111156107e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156108175781602001602082028036833780820191505090505b50905060005b83811015610861576000819080600181540180825580915050600190039060005260206000200160009091909190915055808061085990611224565b91505061081d565b5060005b8481101561094257600080805490506108884284610883919061111e565b6104eb565b610892919061129b565b905060008082815481106108cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080848481518110610916577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505061092d826000610a2d565b5050808061093a90611224565b915050610865565b506000806109509190610bd8565b7ff342b703ddfff3e1f7ed4f36e99751e86d37e3e1f1a63bd874e70e678604c3438160405161097f9190610f96565b60405180910390a18091505092915050565b610a2982826040516024016109a7929190610fb8565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b8d565b5050565b80805490508210610a73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6a90611008565b60405180910390fd5b60008290505b60018280549050610a8a9190611174565b811015610b3b5781600182610a9f919061111e565b81548110610ad6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154828281548110610b1a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001819055508080610b3390611224565b915050610a79565b5080805480610b73577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590555050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060400160405280600290602082028036833780820191505090505090565b5080546000825590600052602060002090810190610bf69190610bf9565b50565b5b80821115610c12576000816000905550600101610bfa565b5090565b600081359050610c25816113e9565b92915050565b600081359050610c3a81611400565b92915050565b600060208284031215610c5257600080fd5b6000610c6084828501610c16565b91505092915050565b600060208284031215610c7b57600080fd5b6000610c8984828501610c2b565b91505092915050565b60008060408385031215610ca557600080fd5b6000610cb385828601610c2b565b9250506020610cc485828601610c2b565b9150509250929050565b6000610cda8383610de9565b60408301905092915050565b6000610cf28383610ee2565b60208301905092915050565b6000610d0a8383610f17565b60208301905092915050565b610d27610d22826111a8565b61126d565b82525050565b6000610d388261108d565b610d4281856110e0565b9350610d4d83611063565b8060005b83811015610d7e578151610d658882610cce565b9750610d70836110b9565b925050600181019050610d51565b5085935050505092915050565b6000610d9682611098565b610da081856110f1565b9350610dab83611073565b8060005b83811015610ddc578151610dc38882610ce6565b9750610dce836110c6565b925050600181019050610daf565b5085935050505092915050565b610df2816110a3565b610dfc8184611102565b9250610e0782611083565b8060005b83811015610e38578151610e1f8782610cfe565b9650610e2a836110d3565b925050600181019050610e0b565b505050505050565b6000610e4b826110ae565b610e55818561110d565b9350610e658185602086016111f1565b610e6e8161132a565b840191505092915050565b6000610e8660298361110d565b9150610e9182611348565b604082019050919050565b6000610ea9601c8361110d565b9150610eb482611397565b602082019050919050565b6000610ecc601b8361110d565b9150610ed7826113c0565b602082019050919050565b610eeb816111da565b82525050565b610efa816111da565b82525050565b610f11610f0c826111da565b611291565b82525050565b610f20816111e4565b82525050565b6000610f328287610f00565b602082019150610f428286610f00565b602082019150610f528285610d16565b601482019150610f628284610f00565b60208201915081905095945050505050565b60006020820190508181036000830152610f8e8184610d2d565b905092915050565b60006020820190508181036000830152610fb08184610d8b565b905092915050565b60006040820190508181036000830152610fd28185610e40565b9050610fe16020830184610ef1565b9392505050565b6000602082019050818103600083015261100181610e79565b9050919050565b6000602082019050818103600083015261102181610e9c565b9050919050565b6000602082019050818103600083015261104181610ebf565b9050919050565b600060208201905061105d6000830184610ef1565b92915050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050919050565b600081519050919050565b600081519050919050565b600060029050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611129826111da565b9150611134836111da565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611169576111686112cc565b5b828201905092915050565b600061117f826111da565b915061118a836111da565b92508282101561119d5761119c6112cc565b5b828203905092915050565b60006111b3826111ba565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561120f5780820151818401526020810190506111f4565b8381111561121e576000848401525b50505050565b600061122f826111da565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611262576112616112cc565b5b600182019050919050565b60006112788261127f565b9050919050565b600061128a8261133b565b9050919050565b6000819050919050565b60006112a6826111da565b91506112b1836111da565b9250826112c1576112c06112fb565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f63616e6e6f742073616d706c65206d6f7265207468616e206e756d6265725f6f60008201527f665f63686f696365730000000000000000000000000000000000000000000000602082015250565b7f5f696e646578206f7574206f6620626f756e6420666f72205f61727200000000600082015250565b7f6d757374206e6f7420657863656564206d617820746f6e6e6167650000000000600082015250565b6113f2816111a8565b81146113fd57600080fd5b50565b611409816111da565b811461141457600080fd5b5056fea26469706673582212204fede7eccb9c38f9f2caae0dd3f75032a5d643ead9ff1197373b684af3ad027d64736f6c63430008040033";

type ShittyRandomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShittyRandomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShittyRandom__factory extends ContractFactory {
  constructor(...args: ShittyRandomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShittyRandom";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShittyRandom> {
    return super.deploy(overrides || {}) as Promise<ShittyRandom>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ShittyRandom {
    return super.attach(address) as ShittyRandom;
  }
  connect(signer: Signer): ShittyRandom__factory {
    return super.connect(signer) as ShittyRandom__factory;
  }
  static readonly contractName: "ShittyRandom";
  public readonly contractName: "ShittyRandom";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShittyRandomInterface {
    return new utils.Interface(_abi) as ShittyRandomInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShittyRandom {
    return new Contract(address, _abi, signerOrProvider) as ShittyRandom;
  }
}
