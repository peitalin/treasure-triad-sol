/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ShittyRandom, ShittyRandomInterface } from "../ShittyRandom";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    name: "ArrayOfIndices",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8[2][]",
        name: "",
        type: "uint8[2][]",
      },
    ],
    name: "ArrayOfSampledCellCoords",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "requestRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number_of_cells",
        type: "uint256",
      },
    ],
    name: "sampleRandomGridCellCoords",
    outputs: [
      {
        internalType: "uint8[2][]",
        name: "",
        type: "uint8[2][]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e55806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063199895ba1461003b578063b1eb96c91461006b575b600080fd5b610055600480360381019061005091906107e8565b61009b565b6040516100629190610a5b565b60405180910390f35b610085600480360381019061008091906107e8565b6103a0565b6040516100929190610adf565b60405180910390f35b606060006009905060006100af84836103e4565b905060006040518061012001604052806040518060400160405280600060ff168152602001600060ff1681525081526020016040518060400160405280600060ff168152602001600160ff1681525081526020016040518060400160405280600060ff168152602001600260ff1681525081526020016040518060400160405280600160ff168152602001600060ff1681525081526020016040518060400160405280600160ff168152602001600160ff1681525081526020016040518060400160405280600160ff168152602001600260ff1681525081526020016040518060400160405280600260ff168152602001600060ff1681525081526020016040518060400160405280600260ff168152602001600160ff1681525081526020016040518060400160405280600260ff168152602001600260ff16815250815250905060008567ffffffffffffffff811115610233577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561026c57816020015b610259610773565b8152602001906001900390816102515790505b50905060005b835181101561035c5760008482815181106102b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905060008482600981106102fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015190508084848151811061033c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052505050808061035490610c7d565b915050610272565b507fd2cdd152f44d7865cf638b593dda807a30fe13c5514661a9250b9afe961d47328160405161038c9190610a5b565b60405180910390a180945050505050919050565b600080424433856040516020016103ba9493929190610a0d565b60405160208183030381529060405290506000818051906020012060001c90508092505050919050565b606081831115610429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042090610a9f565b60405180910390fd5b60008367ffffffffffffffff81111561046b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104995781602001602082028036833780820191505090505b50905060005b838110156104e357600081908060018154018082558091505060019003906000526020600020016000909190919091505580806104db90610c7d565b91505061049f565b5060005b848110156105c4576000808054905061050a42846105059190610baa565b6103a0565b6105149190610cf4565b90506000808281548110610551577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080848481518110610598577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250506105af826000610613565b505080806105bc90610c7d565b9150506104e7565b506000806105d29190610795565b7ff342b703ddfff3e1f7ed4f36e99751e86d37e3e1f1a63bd874e70e678604c343816040516106019190610a7d565b60405180910390a18091505092915050565b80805490508210610659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065090610abf565b60405180910390fd5b60008290505b600182805490506106709190610c00565b81101561072157816001826106859190610baa565b815481106106bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154828281548110610700577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550808061071990610c7d565b91505061065f565b5080805480610759577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590555050565b6040518060400160405280600290602082028036833780820191505090505090565b50805460008255906000526020600020908101906107b391906107b6565b50565b5b808211156107cf5760008160009055506001016107b7565b5090565b6000813590506107e281610e08565b92915050565b6000602082840312156107fa57600080fd5b6000610808848285016107d3565b91505092915050565b600061081d838361092c565b60408301905092915050565b600061083583836109c9565b60208301905092915050565b600061084d83836109fe565b60208301905092915050565b61086a61086582610c34565b610cc6565b82525050565b600061087b82610b24565b6108858185610b6c565b935061089083610afa565b8060005b838110156108c15781516108a88882610811565b97506108b383610b45565b925050600181019050610894565b5085935050505092915050565b60006108d982610b2f565b6108e38185610b7d565b93506108ee83610b0a565b8060005b8381101561091f5781516109068882610829565b975061091183610b52565b9250506001810190506108f2565b5085935050505092915050565b61093581610b3a565b61093f8184610b8e565b925061094a82610b1a565b8060005b8381101561097b5781516109628782610841565b965061096d83610b5f565b92505060018101905061094e565b505050505050565b6000610990602983610b99565b915061099b82610d90565b604082019050919050565b60006109b3601c83610b99565b91506109be82610ddf565b602082019050919050565b6109d281610c66565b82525050565b6109e181610c66565b82525050565b6109f86109f382610c66565b610cea565b82525050565b610a0781610c70565b82525050565b6000610a1982876109e7565b602082019150610a2982866109e7565b602082019150610a398285610859565b601482019150610a4982846109e7565b60208201915081905095945050505050565b60006020820190508181036000830152610a758184610870565b905092915050565b60006020820190508181036000830152610a9781846108ce565b905092915050565b60006020820190508181036000830152610ab881610983565b9050919050565b60006020820190508181036000830152610ad8816109a6565b9050919050565b6000602082019050610af460008301846109d8565b92915050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050919050565b600081519050919050565b600081519050919050565b600060029050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610bb582610c66565b9150610bc083610c66565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bf557610bf4610d25565b5b828201905092915050565b6000610c0b82610c66565b9150610c1683610c66565b925082821015610c2957610c28610d25565b5b828203905092915050565b6000610c3f82610c46565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000610c8882610c66565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cbb57610cba610d25565b5b600182019050919050565b6000610cd182610cd8565b9050919050565b6000610ce382610d83565b9050919050565b6000819050919050565b6000610cff82610c66565b9150610d0a83610c66565b925082610d1a57610d19610d54565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160601b9050919050565b7f63616e6e6f742073616d706c65206d6f7265207468616e206e756d6265725f6f60008201527f665f63686f696365730000000000000000000000000000000000000000000000602082015250565b7f5f696e646578206f7574206f6620626f756e6420666f72205f61727200000000600082015250565b610e1181610c66565b8114610e1c57600080fd5b5056fea26469706673582212206f84019535eabb5823048651022b8ccda9cc23f09d4227f0b832a3bad48259b564736f6c63430008040033";

type ShittyRandomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShittyRandomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShittyRandom__factory extends ContractFactory {
  constructor(...args: ShittyRandomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShittyRandom";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShittyRandom> {
    return super.deploy(overrides || {}) as Promise<ShittyRandom>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ShittyRandom {
    return super.attach(address) as ShittyRandom;
  }
  connect(signer: Signer): ShittyRandom__factory {
    return super.connect(signer) as ShittyRandom__factory;
  }
  static readonly contractName: "ShittyRandom";
  public readonly contractName: "ShittyRandom";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShittyRandomInterface {
    return new utils.Interface(_abi) as ShittyRandomInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShittyRandom {
    return new Contract(address, _abi, signerOrProvider) as ShittyRandom;
  }
}
